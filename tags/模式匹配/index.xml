<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>模式匹配 on 图拉国营噄茶馆</title>
    <link>https://winterorch.github.io/tags/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/</link>
    <description>Recent content in 模式匹配 on 图拉国营噄茶馆</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 27 Dec 2021 19:13:22 +0800</lastBuildDate><atom:link href="https://winterorch.github.io/tags/%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scala - 模式匹配</title>
      <link>https://winterorch.github.io/p/scala-%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Mon, 27 Dec 2021 19:13:22 +0800</pubDate>
      
      <guid>https://winterorch.github.io/p/scala-%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid>
      <description>参考来源： https://windor.gitbooks.io/beginners-guide-to-scala/content https://docs.scala-lang.org/scala3/book
 一个不同数据类型的模式匹配如下：
object Test { def main(args: Array[String]) { println(matchTest(&amp;#34;two&amp;#34;)) println(matchTest(&amp;#34;test&amp;#34;)) println(matchTest(1)) println(matchTest(6)) } def matchTest(x: Any): Any = x match { case 1 =&amp;gt; &amp;#34;one&amp;#34; case &amp;#34;two&amp;#34; =&amp;gt; 2 case y: Int =&amp;gt; &amp;#34;scala.Int&amp;#34; case _ =&amp;gt; &amp;#34;many&amp;#34;	// Same as default in switch  } } case 的用法相当多，包括逻辑符号 | 以及 if 条件语句都可以适用，与 switch 的区别在于只会匹配一项，所以也不需要 break
case 0 | &amp;#34;&amp;#34; =&amp;gt; false case 2 | 4 | 6 | 8 | 10 =&amp;gt; println(&amp;#34;偶数&amp;#34;) case x if x == 2 || x == 3 =&amp;gt; println(&amp;#34;two&amp;#39;s company, three&amp;#39;s a crowd&amp;#34;)  提取器 (Extractor Objects) 典型的提取器具有两个方法</description>
    </item>
    
  </channel>
</rss>
